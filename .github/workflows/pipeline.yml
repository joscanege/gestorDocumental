name: Flujo de trabajo para publicar
on:
  push:
    branches: [ joscanege ]
  pull_request:
    branches: [ joscanege ]

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Construyendo y probando el código
        run: |
          chmod +x gradlew        
          ./gradlew assemble
  Test:
    needs: Build
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Construyendo y probando el código
        run: |
          chmod +x gradlew        
          ./gradlew test
  publish:
    runs-on: ubuntu-latest
    needs: Test
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Publiando el codigo
        run: |
          chmod +x gradlew        
          ./gradlew publish
          echo ${{github.actor}}
